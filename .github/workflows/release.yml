name: Unified Release (All Components)

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., 2.0.0) - will be used for CLI, SDK, and Docker'
        required: true
        type: string

jobs:
  release-cli:
    uses: ./.github/workflows/release-cli.yml
    secrets: inherit
    with:
      version: ${{ github.event.inputs.version }}

  release-python-sdk:
    uses: ./.github/workflows/release-client-python.yml
    secrets: inherit
    with:
      version: ${{ github.event.inputs.version }}

  release-docker:
    uses: ./.github/workflows/release-docker.yml
    secrets: inherit
    with:
      version: ${{ github.event.inputs.version }}

  create-unified-release:
    runs-on: ubuntu-latest
    needs: [release-cli, release-python-sdk, release-docker]
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v4

    - name: Create unified git tag
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git tag -a "v${{ inputs.version }}" -m "Unified Release v${{ inputs.version }}"
        git push origin "v${{ inputs.version }}"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Create unified GitHub Release
      uses: ncipollo/release-action@v1
      with:
        tag: "v${{ inputs.version }}"
        name: "Dakora v${{ inputs.version }}"
        body: |
          ## Dakora Platform v${{ inputs.version }}

          Unified release of all Dakora components with synchronized versions.

          ### üì¶ Python Packages

          **CLI**
          ```bash
          pip install dakora==${{ inputs.version }}
          ```

          **Python SDK**
          ```bash
          pip install dakora-client==${{ inputs.version }}
          ```

          ### üê≥ Docker Images

          ```bash
          docker pull ghcr.io/${{ github.repository }}/server:${{ inputs.version }}
          docker pull ghcr.io/${{ github.repository }}/studio:${{ inputs.version }}
          ```

          ### Component Releases
          - [CLI v${{ inputs.version }}](https://github.com/${{ github.repository }}/releases/tag/cli-v${{ inputs.version }})
          - [Python SDK v${{ inputs.version }}](https://github.com/${{ github.repository }}/releases/tag/client-python-v${{ inputs.version }})
          - [Docker Images v${{ inputs.version }}](https://github.com/${{ github.repository }}/releases/tag/docker-v${{ inputs.version }})
        draft: false
        prerelease: false
        token: ${{ secrets.GITHUB_TOKEN }}