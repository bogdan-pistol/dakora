version: '3.8'

services:
  api:
    build:
      context: ../server
      dockerfile: Dockerfile
    container_name: dakora-api
    ports:
      - "${API_PORT:-54321}:8000"
    environment:
      - MODE=${MODE:-local}
      - PROMPT_DIR=/app/prompts
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/dakora
      - REDIS_URL=redis://redis:6379
    volumes:
      - ../prompts:/app/prompts:ro
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    restart: unless-stopped

  studio:
    build:
      context: ../studio
      dockerfile: Dockerfile
    container_name: dakora-studio
    ports:
      - "${STUDIO_PORT:-3000}:80"
    environment:
      - VITE_API_URL=http://localhost:${API_PORT:-54321}
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
    restart: unless-stopped

  db:
    image: postgres:15-alpine
    container_name: dakora-db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=dakora
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d dakora"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: dakora-redis
    ports:
      - "6379:6379"
    restart: unless-stopped

volumes:
  db_data:
    driver: local